// Generated by CoffeeScript 1.7.1

/* https://gist.github.com/alecperkins/3363111 */

(function() {
  var App, init,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = new Marionette.Application();

  App.addRegions({
    mainRegion: 'body'
  });

  init = function() {
    return App.start();
  };

  $(init);

  App.module('GeneralBehavior', function(GeneralBehavior, App, Backbone, Marionette, $, _) {
    var AddSimpleItem;
    if (window.Behaviors == null) {
      window.Behaviors = {};
    }
    Marionette.Behaviors.behaviorsLookup = function() {
      return window.Behaviors;
    };
    AddSimpleItem = (function(_super) {
      __extends(AddSimpleItem, _super);

      function AddSimpleItem() {
        return AddSimpleItem.__super__.constructor.apply(this, arguments);
      }

      AddSimpleItem.prototype.events = {
        "click @ui.addItemButton": "addItem",
        "change @ui.itemName": "inputChanged"
      };

      AddSimpleItem.prototype.inputChanged = function(e) {
        console.debug('d.fm');
        return true;
      };

      AddSimpleItem.prototype.addItem = function(e) {
        console.debug(this);
        console.debug('sdvknsdlvn');
        this.view.getCollection().add({
          name: this.view.ui.itemName.val()
        });
        return true;
      };

      return AddSimpleItem;

    })(Marionette.Behavior);
    return window.Behaviors.AddSimpleItem = AddSimpleItem;
  });

  App.module('TodoListApp', function(TodoListApp, App, Backbone, Marionette, $, _) {
    var TodoListAppView;
    TodoListAppView = (function(_super) {
      __extends(TodoListAppView, _super);

      function TodoListAppView() {
        return TodoListAppView.__super__.constructor.apply(this, arguments);
      }

      TodoListAppView.prototype.className = "container";

      TodoListAppView.prototype.template = _.template("<div id=\"todolistapp-lists\">\n	<div id=\"todolistapp-list-input\"></div>\n	<hr />\n	<div id=\"todolistapp-lists-view\"></div>\n</div>\n<hr />\n<hr />\n<div id=\"todolistapp-entries\">\n	<div id=\"todolistapp-entry-input\"></div>\n	<hr />\n	<div id=\"todolistapp-entries-view\"></div>\n</div>");

      TodoListAppView.prototype.regions = {
        listsArea: "#todolistapp-lists",
        listInput: "#todolistapp-list-input",
        listsView: "#todolistapp-lists-view",
        entriesArea: "#todolistapp-entries",
        entryInput: "#todolistapp-entry-input",
        entriesView: "#todolistapp-entries-view"
      };

      return TodoListAppView;

    })(Marionette.LayoutView);
    TodoListApp.run = function() {
      this.mainView = new TodoListAppView();
      window.TodoListApp = this;
      App.mainRegion.show(this.mainView);
      return App.vent.trigger('app:initialized', App);
    };
    return App.addInitializer(function() {
      return TodoListApp.run();
    });
  });

  App.module('TodoListApp.EntryInput', function(EntryInput, App, Backbone, Marionette, $, _) {
    var EntryInputView;
    EntryInputView = (function(_super) {
      __extends(EntryInputView, _super);

      function EntryInputView() {
        return EntryInputView.__super__.constructor.apply(this, arguments);
      }

      EntryInputView.prototype.ui = {
        "addItemButton": "button.add-item",
        "itemName": "input"
      };

      EntryInputView.prototype.behaviors = {
        AddSimpleItem: {}
      };

      EntryInputView.prototype.className = "form-group";

      EntryInputView.prototype.template = _.template("<label for=\"entryname\">Eintrag eintragen</label>\n<div class=\"input-group\">\n	<input type=\"text\" class=\"form-control\" id=\"entryname\" placeholder=\"Eintrag\">\n	<span class=\"input-group-btn\">\n		<button class=\"btn btn-success add-item\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n	</span>\n</div>");

      return EntryInputView;

    })(Marionette.LayoutView);
    EntryInput.run = function() {
      console.debug('TodoListApp.EntryInput');
      this.mainView = new EntryInputView();
      return App.TodoListApp.mainView.entryInput.show(this.mainView);
    };
    return EntryInput.addInitializer(EntryInput.run);
  });

  App.module('TodoListApp.ListInput', function(ListInput, App, Backbone, Marionette, $, _) {
    var ListInputView;
    ListInputView = (function(_super) {
      __extends(ListInputView, _super);

      function ListInputView() {
        return ListInputView.__super__.constructor.apply(this, arguments);
      }

      ListInputView.prototype.ui = {
        "addItemButton": "button.add-item",
        "itemName": "input"
      };

      ListInputView.prototype.behaviors = {
        AddSimpleItem: {}
      };

      ListInputView.prototype.getCollection = function() {
        return App.TodoListApp.listCollection;
      };

      ListInputView.prototype.template = _.template("<label for=\"listname\">Liste anlegen</label>\n<div class=\"input-group\">\n	<input type=\"text\" class=\"form-control\" id=\"listname\" placeholder=\"Liste\">\n	<span class=\"input-group-btn\">\n		<button class=\"btn btn-success add-item\" type=\"button\"><i class=\"fa fa-plus\"></i></button>\n	</span>\n</div>");

      return ListInputView;

    })(Marionette.LayoutView);
    ListInput.run = function() {
      console.debug('TodoListApp.ListInput');
      this.mainView = new ListInputView();
      return App.TodoListApp.mainView.listInput.show(this.mainView);
    };
    return ListInput.addInitializer(ListInput.run);
  });

  App.module('TodoListApp.ListsView', function(ListsView, App, Backbone, Marionette, $, _) {
    var ListCollection, ListCollectionView, ListItemView;
    ListItemView = (function(_super) {
      __extends(ListItemView, _super);

      function ListItemView() {
        return ListItemView.__super__.constructor.apply(this, arguments);
      }

      ListItemView.prototype.tagName = "li";

      ListItemView.prototype.className = "list-group-item";

      ListItemView.prototype.template = _.template("<%= name %> \n<span class=\"delete badge\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"LÃ¶sche Adresse\"><i class=\"fa fa-trash-o fa-fw\"></i></span>");

      ListItemView.prototype.initialize = function() {
        return this.model.correspondingView = this;
      };

      ListItemView.prototype.events = {
        'click .delete': function() {
          return this.model.destroy();
        }
      };

      ListItemView.prototype.onRender = function() {
        this.$el.find('span').tooltip();
        return true;
      };

      return ListItemView;

    })(Marionette.ItemView);
    ListCollectionView = (function(_super) {
      __extends(ListCollectionView, _super);

      function ListCollectionView() {
        return ListCollectionView.__super__.constructor.apply(this, arguments);
      }

      ListCollectionView.prototype.tagName = "ul";

      ListCollectionView.prototype.className = "list-group";

      ListCollectionView.prototype.childView = ListItemView;

      return ListCollectionView;

    })(Marionette.CollectionView);
    ListCollection = (function(_super) {
      __extends(ListCollection, _super);

      function ListCollection() {
        return ListCollection.__super__.constructor.apply(this, arguments);
      }

      ListCollection.prototype.model = Backbone.Model;

      return ListCollection;

    })(Backbone.Collection);
    this.run = function() {
      console.debug('TodoListApp.ListsView');
      this.mainView = new ListCollectionView({
        collection: new ListCollection()
      });
      App.TodoListApp.mainView.listsView.show(this.mainView);
      return App.TodoListApp.listCollection = this.mainView.collection;
    };
    return App.addInitializer(this.run);
  });

}).call(this);
